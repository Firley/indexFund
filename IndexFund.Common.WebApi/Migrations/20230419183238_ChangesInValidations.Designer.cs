// <auto-generated />
using System;
using IndexFund.Common.WebApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IndexFund.Common.WebApi.Migrations
{
    [DbContext(typeof(FundDbContext))]
    [Migration("20230419183238_ChangesInValidations")]
    partial class ChangesInValidations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IndexFund.Common.WebApi.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Polish stocks"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Foreign stocks"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Polish bonds"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Foreign bonds"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mixed funds"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Commodities"
                        });
                });

            modelBuilder.Entity("IndexFund.Common.WebApi.Entities.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Benchmark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FirstMinimalPayment")
                        .HasPrecision(7, 3)
                        .HasColumnType("decimal(7,3)");

                    b.Property<DateTime>("FundStartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HandlingFee")
                        .HasPrecision(7, 3)
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("InternalCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("ManagementFee")
                        .HasPrecision(7, 3)
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("MinimalPayment")
                        .HasPrecision(7, 3)
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PayoutCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RiskLevel")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(7, 3)
                        .HasColumnType("decimal(7,3)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Funds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Benchmark = "Vanguard S&P 500 ETF",
                            CategoryId = 2,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2023, 3, 20, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8589),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund S&P500 Vanguard QQQ USD",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "S&P500 Vanguard QQQ USD",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 2,
                            Benchmark = "SSPDR S&P 500 ETF Trust",
                            CategoryId = 2,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2023, 3, 20, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8653),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.7m,
                            MinimalPayment = 100m,
                            Name = "Index Fund SSPDR S&P 500 ETF Trust",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "SSPDR S&P 500 ETF Trust",
                            UnitPrice = 200m
                        },
                        new
                        {
                            Id = 3,
                            Benchmark = "iShares Core S&P 500 ETF USD",
                            CategoryId = 2,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 5, 24, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8662),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.55m,
                            MinimalPayment = 100m,
                            Name = "Index Fund iShares Core S&P 500 ETF",
                            PayoutCurrency = "PLN",
                            RiskLevel = 5,
                            ShortName = "iShares Core S&P 500 ETF",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 4,
                            Benchmark = "iShares Core S&P 500 ETF USD",
                            CategoryId = 2,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2023, 1, 9, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8670),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.75m,
                            MinimalPayment = 50m,
                            Name = "Index Fund iShares Core S&P 500 ETF QQQ USD",
                            PayoutCurrency = "PLN",
                            RiskLevel = 5,
                            ShortName = "iShares Core S&P 500 ETF QQQ",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 5,
                            Benchmark = "Vanguard S&P 500 ETF (VOO)",
                            CategoryId = 2,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2023, 1, 9, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8678),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Vanguard S&P 500 ETF (VOO)",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "S&P 500 ETF (VOO)",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 6,
                            Benchmark = "iShares U.S. Treasury Bond ETF",
                            CategoryId = 4,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2023, 3, 20, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8686),
                            HandlingFee = 0.1m,
                            InternalCurrency = "USD",
                            IsActive = false,
                            ManagementFee = 0.2m,
                            MinimalPayment = 100m,
                            Name = "Index Fund U.S. Treasury Bond EF",
                            PayoutCurrency = "USD",
                            RiskLevel = 1,
                            ShortName = "U.S. Treasury Bond",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 7,
                            Benchmark = "iShares World Treasury Bond ETF",
                            CategoryId = 4,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2023, 3, 20, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8693),
                            HandlingFee = 0.15m,
                            InternalCurrency = "USD",
                            IsActive = false,
                            ManagementFee = 0.2m,
                            MinimalPayment = 100m,
                            Name = "Index Fund World Treasury Bond ETF",
                            PayoutCurrency = "USD",
                            RiskLevel = 1,
                            ShortName = "World Treasury Bond",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 8,
                            Benchmark = "iShares Europe Treasury Bond ETF",
                            CategoryId = 4,
                            ExternalCurrency = "EUR",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2021, 1, 2, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8701),
                            HandlingFee = 0.15m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 0.2m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Europe Treasury Bond ETF",
                            PayoutCurrency = "EUR",
                            RiskLevel = 1,
                            ShortName = "Europe Treasury Bond",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 9,
                            Benchmark = "iShares UE Treasury Bond ETF",
                            CategoryId = 4,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2023, 3, 20, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8708),
                            HandlingFee = 0.10m,
                            InternalCurrency = "USD",
                            IsActive = false,
                            ManagementFee = 0.2m,
                            MinimalPayment = 100m,
                            Name = "Index Fund UE Treasury Bond ETF",
                            PayoutCurrency = "USD",
                            RiskLevel = 1,
                            ShortName = "UE Treasury Bond",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 10,
                            Benchmark = "iShares Corporate Treasury Bond ETF",
                            CategoryId = 4,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2022, 4, 17, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8714),
                            HandlingFee = 0.10m,
                            InternalCurrency = "USD",
                            IsActive = false,
                            ManagementFee = 0.2m,
                            MinimalPayment = 100m,
                            Name = "Index Fund UE Corporate Bond ETF",
                            PayoutCurrency = "USD",
                            RiskLevel = 2,
                            ShortName = "UECorporate Bond",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 11,
                            Benchmark = "Schwab U.S. Dividend Equity ETF",
                            CategoryId = 2,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2021, 5, 29, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8720),
                            HandlingFee = 0.5m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Schwab U.S. Dividend Equity ETF",
                            PayoutCurrency = "PLN",
                            RiskLevel = 1,
                            ShortName = "Dividend Equity ETF",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 12,
                            Benchmark = "Optimum Yield Diversified Commodity Strategy",
                            CategoryId = 6,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2023, 3, 11, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8732),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Invesco Optimum Yield Diversified Commodity Strategy",
                            PayoutCurrency = "PLN",
                            RiskLevel = 4,
                            ShortName = "Optimum Yield Diversified Commodity Strategy",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 13,
                            Benchmark = "SPDR SWIG100 ETF Trust",
                            CategoryId = 1,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2021, 11, 5, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8737),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund SPDR SWIG100 ETF Trust",
                            PayoutCurrency = "PLN",
                            RiskLevel = 1,
                            ShortName = "SPDR SWIG100",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 14,
                            Benchmark = "Schwab POL Dividend Equity",
                            CategoryId = 1,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2021, 4, 19, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8743),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Schwab POL Dividend Equity",
                            PayoutCurrency = "PLN",
                            RiskLevel = 1,
                            ShortName = "Schwab POL Dividend Equity",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 15,
                            Benchmark = "iShares Treasury Polish bond",
                            CategoryId = 3,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2021, 11, 5, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8747),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Treasury Polish bond",
                            PayoutCurrency = "PLN",
                            RiskLevel = 1,
                            ShortName = "Treasury Polish bond",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 16,
                            Benchmark = "iShares Mixed funds",
                            CategoryId = 5,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 5, 24, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8752),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Mixed funds Total Return",
                            PayoutCurrency = "PLN",
                            RiskLevel = 1,
                            ShortName = "iShares Mixed funds TR",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 17,
                            Benchmark = "iShares",
                            CategoryId = 1,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2021, 8, 27, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8756),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks Test",
                            PayoutCurrency = "PLN",
                            RiskLevel = 1,
                            ShortName = "Polish stocks iShares",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 18,
                            Benchmark = "iShares World Commodities",
                            CategoryId = 6,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 6, 23, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8763),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = false,
                            ManagementFee = 1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund World Commodities",
                            PayoutCurrency = "PLN",
                            RiskLevel = 1,
                            ShortName = "World Commodities",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 19,
                            Benchmark = "Vanguard S&P 500 ETF0",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 24, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8811),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 0",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 0",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 20,
                            Benchmark = "Vanguard S&P 500 ETF1",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 25, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8819),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 1",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 1",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 21,
                            Benchmark = "Vanguard S&P 500 ETF2",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 26, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8827),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 2",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 2",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 22,
                            Benchmark = "Vanguard S&P 500 ETF3",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 27, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8834),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 3",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 3",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 23,
                            Benchmark = "Vanguard S&P 500 ETF4",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 28, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8841),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 4",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 4",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 24,
                            Benchmark = "Vanguard S&P 500 ETF5",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 29, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8849),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 5",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 5",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 25,
                            Benchmark = "Vanguard S&P 500 ETF6",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 30, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8856),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 6",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 6",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 26,
                            Benchmark = "Vanguard S&P 500 ETF7",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 7, 31, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8864),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 7",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 7",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 27,
                            Benchmark = "Vanguard S&P 500 ETF8",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 8, 1, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8872),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 8",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 8",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 28,
                            Benchmark = "Vanguard S&P 500 ETF9",
                            CategoryId = 1,
                            ExternalCurrency = "USD",
                            FirstMinimalPayment = 500m,
                            FundStartDate = new DateTime(2020, 8, 2, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8880),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.5m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Polish stocks 9",
                            PayoutCurrency = "PLN",
                            RiskLevel = 3,
                            ShortName = "Index Polish stocks 9",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 29,
                            Benchmark = "Foreign bonds ETF0",
                            CategoryId = 5,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 5, 4, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8934),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.25m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Mixed funds 0",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Mixed funds 0",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 30,
                            Benchmark = "Foreign bonds ETF1",
                            CategoryId = 5,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 5, 5, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8944),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.25m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Mixed funds 1",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Mixed funds 1",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 31,
                            Benchmark = "Foreign bonds ETF2",
                            CategoryId = 5,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 5, 6, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8953),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.25m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Mixed funds 2",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Mixed funds 2",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 32,
                            Benchmark = "Foreign bonds ETF3",
                            CategoryId = 5,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 5, 7, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8961),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.25m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Mixed funds 3",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Mixed funds 3",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 33,
                            Benchmark = "Foreign bonds ETF4",
                            CategoryId = 5,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2022, 5, 8, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8971),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.25m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Mixed funds 4",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Mixed funds 4",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 34,
                            Benchmark = "Foreign bonds ETF0",
                            CategoryId = 4,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2021, 3, 30, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8987),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Foreign bonds 0",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Foreign bonds 0",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 35,
                            Benchmark = "Foreign bonds ETF1",
                            CategoryId = 4,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2021, 3, 29, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(8998),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Foreign bonds 1",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Foreign bonds 1",
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 36,
                            Benchmark = "Foreign bonds ETF2",
                            CategoryId = 4,
                            ExternalCurrency = "PLN",
                            FirstMinimalPayment = 100m,
                            FundStartDate = new DateTime(2021, 3, 28, 20, 32, 38, 64, DateTimeKind.Local).AddTicks(9008),
                            HandlingFee = 1m,
                            InternalCurrency = "PLN",
                            IsActive = true,
                            ManagementFee = 0.1m,
                            MinimalPayment = 100m,
                            Name = "Index Fund Foreign bonds 2",
                            PayoutCurrency = "PLN",
                            RiskLevel = 2,
                            ShortName = "Index Foreign bonds 2",
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("IndexFund.Common.WebApi.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Moderator"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("IndexFund.Common.WebApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IndexFund.Common.WebApi.Entities.Fund", b =>
                {
                    b.HasOne("IndexFund.Common.WebApi.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("IndexFund.Common.WebApi.Entities.User", b =>
                {
                    b.HasOne("IndexFund.Common.WebApi.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
